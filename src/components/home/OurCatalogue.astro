---
import { Image } from "astro:assets";
import ourCatalogueImage from "../../assets/ourcatalogue-homepage.png";
import windowSystemsImage from "../../assets/product-categories-section/window-systems1.png";
import woodenDoorsImage from "../../assets/hero-carousel/4.png";
import framesImage from "../../assets/hero-carousel/2_1.png";
import architecturalImage from "../../assets/hero-carousel/3.png";
import iconImage1 from "../../assets/OurCatalogIcon1.png";
import iconImage2 from "../../assets/OurCatalogIcon2.png";
import iconImage3 from "../../assets/OurCatalogIcon3.png";

// Prepare image URLs for the client-side script
const imageUrls = [
  windowSystemsImage,
  woodenDoorsImage,
  framesImage,
  architecturalImage,
];
---

<section>
  <div class="flex pl-4 md:pl-8 py-0 md:py-16">
    <div class="basis-2/3 relative">
      <Image
        src={ourCatalogueImage}
        alt="House"
        loading={"lazy"}
        class="w-full h-auto"
      />

      <!-- Interactive icons -->
      <div class="absolute inset-0">
        <!-- First icon positioned on the left -->
        <div
          class="absolute w-10 h-10 sm:w-12 sm:h-12 cursor-pointer transition-transform duration-200 md:hover:scale-110 active:scale-95 catalogue-icon"
          style="top: 19%; left: 38%;"
          data-category="0"
          title="Window Systems"
        >
          <Image
            src={iconImage1}
            alt="Window Systems Icon"
            class="w-full h-full pointer-events-none"
            loading="lazy"
          />
          <!-- Pulse animation hint for mobile -->
          <div class="absolute inset-0 rounded-full bg-white/20 animate-ping md:hidden catalogue-icon-pulse"></div>
        </div>

        <!-- Second icon positioned on the left -->
        <div
          class="absolute w-10 h-10 sm:w-12 sm:h-12 cursor-pointer transition-transform duration-200 md:hover:scale-110 active:scale-95 catalogue-icon"
          style="top: 65%; left: 26%;"
          data-category="1"
          title="Wooden Doors"
        >
          <Image
            src={iconImage2}
            alt="Wooden Doors Icon"
            class="w-full h-full pointer-events-none"
            loading="lazy"
          />
          <!-- Pulse animation hint for mobile -->
          <div class="absolute inset-0 rounded-full bg-white/20 animate-ping md:hidden catalogue-icon-pulse"></div>
        </div>

        <!-- Third icon positioned on the right -->
        <div
          class="absolute w-10 h-10 sm:w-12 sm:h-12 cursor-pointer transition-transform duration-200 md:hover:scale-110 active:scale-95 catalogue-icon"
          style="top: 60%; right: 24%;"
          data-category="2"
          title="Frames"
        >
          <Image
            src={iconImage3}
            alt="Frames Icon"
            class="w-full h-full pointer-events-none"
            loading="lazy"
          />
          <!-- Pulse animation hint for mobile -->
          <div class="absolute inset-0 rounded-full bg-white/20 animate-ping md:hidden catalogue-icon-pulse"></div>
        </div>
      </div>
    </div>
    <div
      class="basis-1/3 border border-[#E5E2D6] p-2 md:p-6 flex flex-col justify-between"
    >
      <div class="flex-1 flex items-center justify-center">
        <Image
          src={windowSystemsImage}
          alt="Product Category"
          class="w-full h-auto max-w-[300px] lg:max-w-[350px] xl:max-w-[450px] opacity-0 transition-opacity duration-300"
          id="catalogue-image"
          loading="lazy"
        />
      </div>
      <h2
        class="font-[AcidGrotesk] font-light text-[#391B26] text-xs-custom text-lg sm:text-xl md:text-2xl lg:text-4xl xl:text-5xl"
      >
        Our Catalogue
      </h2>
    </div>
  </div>
</section>

<script define:vars={{ imageUrls }}>
  const icons = document.querySelectorAll("div[data-category]");
  const img = document.getElementById("catalogue-image");
  const pulseElements = document.querySelectorAll(".catalogue-icon-pulse");
  let activeCategoryIndex = -1;
  let isMobileDevice = () => window.innerWidth < 768; // md breakpoint

  function updateImage(categoryIndex) {
    if (img && imageUrls[categoryIndex]) {
      img.src = imageUrls[categoryIndex].src;
      img.style.opacity = "1";
      activeCategoryIndex = categoryIndex;
      
      // Update active state styling on mobile
      if (isMobileDevice()) {
        icons.forEach((icon, index) => {
          if (index === categoryIndex) {
            icon.classList.add("scale-110", "z-10");
            icon.classList.remove("scale-100");
          } else {
            icon.classList.remove("scale-110", "z-10");
            icon.classList.add("scale-100");
          }
        });
      }
    }
  }

  function hideImage() {
    if (img && activeCategoryIndex === -1) {
      img.style.opacity = "0";
      // Reset all icons on mobile
      if (isMobileDevice()) {
        icons.forEach((icon) => {
          icon.classList.remove("scale-110", "z-10");
          icon.classList.add("scale-100");
        });
      }
    }
  }

  // Stop pulse animations after first interaction (they're just hints)
  function stopPulseAnimations() {
    pulseElements.forEach((pulse) => {
      pulse.style.display = "none";
    });
  }

  icons.forEach((icon, index) => {
    // Mouse events for desktop
    icon.addEventListener("mouseenter", () => {
      if (!isMobileDevice()) {
        const categoryIndex = parseInt(icon.dataset.category);
        if (img && imageUrls[categoryIndex]) {
          img.src = imageUrls[categoryIndex].src;
          img.style.opacity = "1";
        }
      }
    });

    icon.addEventListener("mouseleave", () => {
      if (!isMobileDevice()) {
        if (img) {
          img.style.opacity = "0";
        }
      }
    });

    // Touch events for mobile - improved
    icon.addEventListener("touchstart", (e) => {
      e.preventDefault();
      const categoryIndex = parseInt(icon.dataset.category);
      
      // Toggle: if tapping the active icon, deselect it
      if (activeCategoryIndex === categoryIndex) {
        activeCategoryIndex = -1;
        hideImage();
      } else {
        updateImage(categoryIndex);
      }
      
      // Stop hint animations after first tap
      stopPulseAnimations();
    });

    // Click events as fallback
    icon.addEventListener("click", (e) => {
      if (!isMobileDevice()) return;
      e.preventDefault();
      const categoryIndex = parseInt(icon.dataset.category);
      
      if (activeCategoryIndex === categoryIndex) {
        activeCategoryIndex = -1;
        hideImage();
      } else {
        updateImage(categoryIndex);
      }
    });
  });

  // Hide image on mobile when tapping outside icons
  document.addEventListener("touchstart", (e) => {
    const isIconTapped = Array.from(icons).some((icon) =>
      icon.contains(e.target)
    );
    if (!isIconTapped && isMobileDevice()) {
      activeCategoryIndex = -1;
      hideImage();
    }
  });

  // Auto-hide pulse hints after 3 seconds
  setTimeout(() => {
    stopPulseAnimations();
  }, 3000);
</script>
