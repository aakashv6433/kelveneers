---
import { Image } from "astro:assets";
import hamburgerIcon from "../assets/icons/hamburger.svg";
import kelveneersIcon from "../assets/secondary-logo.svg";
import searchIcon from "../assets/icons/search.svg";
import personIcon from "../assets/icons/person.svg";
import bagIcon from "../assets/icons/bag.svg";
import Footer from "../components/common/Footer.astro";
import "../styles/global.css";

interface Props {
  title?: string;
}

const { title = "kelveneers" } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <link
      rel="icon"
      type="image/svg+xml"
      href={`${import.meta.env.BASE_URL}favicon.svg`}
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>

  <body>
    <!-- Header with background and fixed positioning for scroll behavior -->
    <header
      id="site-header"
      class="fixed top-0 left-0 md:left-1/2 md:transform md:-translate-x-1/2 w-full !bg-[#351c24] header-container transition-transform duration-300 ease-in-out"
    >
      <nav
        class="flex items-center justify-between py-2 md:py-0 h-full px-7 md:px-0"
      >
        <!-- Logo/Brand section -->
        <div class="flex items-center">
          <button
            type="button"
            aria-label="Hamburger"
            class="bg-transparent border-none cursor-pointer"
            id="hamburger-menu"
          >
            <Image
              src={hamburgerIcon}
              alt={"Hamburger Icon"}
              loading={"eager"}
              class="hamburger-icon nav-icon"
            /></button
          >
        </div>

        <!-- Navigation links -->
        <div
          class="hidden md:flex items-center space-x-5 lg:space-x-7 xl:space-x-9"
        >
          <a href={`${import.meta.env.BASE_URL}`}>
            <Image
              src={kelveneersIcon}
              alt={"Kelveneers Icon"}
              loading={"eager"}
              class="logo-icon nav-icon"
            /></a
          >
          <button
            type="button"
            aria-label="Search"
            class="bg-transparent border-none cursor-pointer items-center-safe"
          >
            <Image
              src={searchIcon}
              alt={"Search Icon"}
              loading={"eager"}
              class="search-icon nav-icon"
            />
          </button>
          <button
            type="button"
            aria-label="Account"
            class="bg-transparent border-none cursor-pointer items-center-safe"
          >
            <Image
              src={personIcon}
              alt={"Person Icon"}
              loading={"eager"}
              class="person-icon nav-icon"
            />
          </button>
          <button
            type="button"
            aria-label="View shopping bag"
            class="bg-transparent border-none cursor-pointer items-center-safe"
          >
            <Image
              src={bagIcon}
              alt={"Bag Icon"}
              loading={"eager"}
              class="bag-icon nav-icon"
            />
          </button>
        </div>
      </nav>
    </header>

    <!-- Side Menu Overlay - Completely independent of header -->
    <div
      id="side-menu-overlay"
      class="fixed inset-0 z-[1000] hidden transition-all duration-300 pointer-events-none"
      style="background-color: rgba(0, 0, 0, 0.3);"
    >
      <!-- Side Menu -->
      <div
        id="side-menu"
        class="fixed top-0 left-0 h-screen w-80 bg-white transform -translate-x-full transition-transform duration-300 ease-in-out shadow-xl z-[1001] overflow-y-auto"
        style="height: 100vh; min-height: 100vh; background-color: #f4f0e0;"
      >
        <!-- Close Button -->
        <div class="px-6 pt-6 pb-12">
          <button
            type="button"
            aria-label="Close Menu"
            class="bg-transparent border-none cursor-pointer font-light transition-colors menu-close-btn"
            id="close-menu"
            style="font-size: 2.5rem; line-height: 1; padding: 0;"
          >
            Ã—
          </button>
        </div>

        <!-- Menu Items -->
        <div class="px-6 pb-6">
          <ul class="space-y-8 md:space-y-10 lg:space-y-12">
            <li
              class="menu-item opacity-0 cursor-pointer transition-colors"
              style="transition-delay: 0.1s; transform: translateX(-20px);"
            >
              <span
                class="font-[Altone] tracking-wide uppercase text-[24px] leading-none transition-colors menu-text"
                >DOORS</span
              >
            </li>
            <li
              class="menu-item opacity-0 cursor-pointer transition-colors"
              style="transition-delay: 0.2s; transform: translateX(-20px);"
            >
              <span
                class="font-[Altone] tracking-wide uppercase text-[24px] leading-none transition-colors menu-text"
                >WINDOWS</span
              >
            </li>
            <li
              class="menu-item opacity-0 cursor-pointer transition-colors"
              style="transition-delay: 0.3s; transform: translateX(-20px);"
            >
              <span
                class="font-[Altone] tracking-wide uppercase text-[24px] leading-none transition-colors menu-text"
                >FRAMES</span
              >
            </li>
            <li
              class="menu-item opacity-0 cursor-pointer transition-colors group"
              style="transition-delay: 0.4s; transform: translateX(-20px);"
            >
              <div class="uppercase transition-colors">
                <div
                  class="font-[Altone] tracking-wide text-[24px] leading-none transition-colors menu-text"
                >
                  ARCHITECTURAL
                </div>
                <div
                  class="font-[Altone] tracking-wide text-[24px] leading-none transition-colors menu-text"
                >
                  ADD-ON PRODUCTS
                </div>
              </div>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </body>

  <style>
    .menu-item {
      transition:
        opacity 0.4s ease-out,
        transform 0.4s ease-out;
    }

    .menu-item.animate-in {
      opacity: 1 !important;
      transform: translateX(0) !important;
    }

    .menu-close-btn {
      color: #351c24;
    }

    .menu-close-btn:hover {
      color: #eb7d66;
    }

    .menu-text {
      color: #351c24;
    }

    .menu-item:hover .menu-text {
      color: #eb7d66;
    }

    #side-menu-overlay:not(.hidden) {
      background-color: rgba(0, 0, 0, 0.3) !important;
      pointer-events: auto !important;
    }
  </style>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const header = document.getElementById("site-header");
      const hamburgerMenu = document.getElementById("hamburger-menu");
      const sideMenuOverlay = document.getElementById("side-menu-overlay");
      const sideMenu = document.getElementById("side-menu");
      const closeMenu = document.getElementById("close-menu");

      let lastScrollY = window.scrollY;
      let isScrollingDown = false;

      // Side menu functionality
      function openMenu() {
        sideMenuOverlay?.classList.remove("hidden");
        sideMenuOverlay?.classList.remove("pointer-events-none");
        // Allow page scrolling while menu is open - don't set overflow:hidden
        setTimeout(() => {
          sideMenu?.classList.remove("-translate-x-full");
          // Trigger staggered animation for menu items
          const menuItems = document.querySelectorAll(".menu-item");
          menuItems.forEach((item) => {
            item.classList.add("animate-in");
          });
        }, 10);
      }

      function closeMenuHandler() {
        sideMenuOverlay?.classList.add("pointer-events-none");
        // Reset menu items animation state
        const menuItems = document.querySelectorAll(".menu-item");
        menuItems.forEach((item) => {
          item.classList.remove("animate-in");
        });

        sideMenu?.classList.add("-translate-x-full");
        setTimeout(() => {
          sideMenuOverlay?.classList.add("hidden");
        }, 300);
      }

      // Event listeners for side menu
      hamburgerMenu?.addEventListener("click", openMenu);
      closeMenu?.addEventListener("click", closeMenuHandler);
      sideMenuOverlay?.addEventListener("click", (e) => {
        if (e.target === sideMenuOverlay) {
          closeMenuHandler();
        }
      });

      // Close menu on escape key
      document.addEventListener("keydown", (e) => {
        if (
          e.key === "Escape" &&
          !sideMenuOverlay?.classList.contains("hidden")
        ) {
          closeMenuHandler();
        }
      });

      // Scroll functionality
      const onScroll = () => {
        const currentScrollY = window.scrollY;

        // Determine scroll direction
        if (currentScrollY > lastScrollY && currentScrollY > 100) {
          // Scrolling down and past 100px - hide navbar
          if (!isScrollingDown) {
            header?.classList.add("header--hidden");
            isScrollingDown = true;
          }
        } else if (currentScrollY < lastScrollY) {
          // Scrolling up - show navbar
          if (isScrollingDown) {
            header?.classList.remove("header--hidden");
            isScrollingDown = false;
          }
        }

        // Add scrolled class for background change
        if (currentScrollY > 80) {
          header?.classList.add("header--scrolled");
        } else {
          header?.classList.remove("header--scrolled");
        }

        lastScrollY = currentScrollY;
      };

      onScroll();
      window.addEventListener("scroll", onScroll, { passive: true });
    });
  </script>
</html>

<!-- Main Content Slot -->
<main class="pt-[40px] md:pt-[60px] lg:pt-[70px] xl:pt-[90px]">
  <slot />
</main>

<Footer />
